import csv
import os
import sqlite3 as lite
import zipfile

source_filename = '/home/stephen/Documents/College/4th Year/4th Year Project/BikeData/201602-citibike-tripdata.zip'
dest_dir = '/home/stephen/Documents/College/4th Year/4th Year Project/BikeData/'
old_name = '/home/stephen/Documents/College/4th Year/4th Year Project/BikeData/201602-citibike-tripdata.csv'
name = '/home/stephen/Documents/College/4th Year/4th Year Project/BikeData/2016-02 - Citi Bike trip data.csv'
temp = "/home/stephen/Documents/College/4th Year/4th Year Project/BikeData/newfile.csv"
# unzip zip file to specified location
with zipfile.ZipFile(source_filename) as zf:
    for member in zf.infolist():
        words = member.filename.split('/')
        path = dest_dir
        for word in words[:-1]:
            drive, word = os.path.splitdrive(word)
            head, word = os.path.split(word)
            if word in (os.curdir, os.pardir, ''):
                continue
            path = os.path.join(path, word)
        zf.extract(member, path)
# rename file to be consistent with others. i.e. in the format: yyyy-mm - Citi Bike trip data.csv
os.rename(old_name, name)

# delete redundant columns and write rest to temp file
with open(name, "rb") as fp_in, open(temp, "wb") as fp_out:
    w = csv.writer(fp_out)
    r = csv.reader(fp_in)
    for row in r:
        del row[3]
        del row[6]
        w.writerow(row)
os.remove(name)

# rewrite back filename with consistent format
with open(temp, "rb") as fp_in, open (name, "wb") as fp_out:
    w = csv.writer(fp_out)
    r = csv.reader(fp_in)
    for row in r:
        w.writerow(row)
